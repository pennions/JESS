input,
textarea {
  border: 0.5px solid @input-border-color;
  border-radius: 2px;
  padding: 0 0.4rem;
  min-height: 3rem;
  outline: currentcolor none 0px;
  accent-color: @primary; /** for checkboxes, radiobuttons etc */

  &:focus {
    border-color: @primary;
    box-shadow: inset 1px 1px 0 @primary, inset -1px -1px 0 @primary;
  }

  &:invalid,
  &[invalid]:not([invalid='false']) {
    border-color: @danger;
    &:hover,
    &:focus {
      box-shadow: inset 1px 1px 0 @danger, inset -1px -1px 0 @danger;
    }
  }

  &:disabled {
    color: @disabled-button-color;
    background-color: @disabled-button-background;
    border-color: @disabled-button-background;
    box-shadow: none;
    cursor: initial;
  }

  &[type='color'],
  &[type='file'],
  &[type='image'],
  &[type='range'],
  &[type='checkbox'],
  &[type='radio'] {
    border: none;
    min-height: unset;
    padding-left: 0;
  }

  &[type='radio'],
  &[type='checkbox'] {
    &:focus {
      outline-offset: 0.1rem;
      outline: @button-outline-color dashed 0.1rem;
    }
  }

  &[type='submit'],
  &[type='button'],
  &[type='reset'] {
    border: 0;
    padding: 0.9rem 1.5rem;

    &:hover {
      cursor: pointer;
      background-color: @default-button-hover;
    }

    &:focus,
    &:active {
      outline: none;
      cursor: pointer;
      box-shadow: 0 0 0 2px @button-outline-color;
    }

    &:disabled,
    &:hover:disabled {
      color: @disabled-button-color;
      background-color: @disabled-button-background;
      border-color: @disabled-button-background;
      box-shadow: none;
      cursor: initial;
    }
  }

  &[type='reset'] {
    background-color: @default-background;
    .border();

    &:focus,
    &:active {
      outline: none;
      cursor: pointer;
      box-shadow: 0 0 0 1px @button-outline-color;
    }
  }

  &[type='button'],
  &[type='submit'] {
    color: @color-on-primary;
    background-color: @primary;

    &:hover {
      background-color: @primary-hover;
    }
  }

  &[type='color'],
  &[type='file'],
  &[type='range'] {
    border: none;

    &:focus {
      outline: @primary solid 2px;
      outline-offset: 2px;
      box-shadow: none;
    }
  }

  &[type='file'] {
    &::file-selector-button,
    &::-webkit-file-upload-button {
      background-color: @primary;
      color: @color-on-primary;
      border-radius: 2px;
      padding: 0.6rem 1.5rem;
      border: 0;
    }

    &:active {
      &::file-selector-button,
      &::-webkit-file-upload-button {
        box-shadow: inset 0 0 0 2px @button-outline-color;
      }
    }

    &:hover {
      &::file-selector-button,
      &::-webkit-file-upload-button {
        cursor: pointer;
        background-color: @primary-hover;
      }
    }

    &:focus {
      outline-offset: 0.1rem;
      outline: @button-outline-color solid 0.2rem;
    }
  }

  &[type='color'] {
    background-color: transparent;
    width: 8rem;
    padding: 0;
  }

  &[type='range'] {
    -webkit-appearance: none;
    background: transparent;
    padding: 0;

    &::-moz-range-thumb {
      width: 1.2rem;
      height: 1.2rem;
      background: @default-background;
      border: 2px solid @range-filled-track-color;
      border-radius: 100px;
    }

    &::-moz-range-track {
      height: 0.3rem;
      background-color: @range-track-color;
    }

    &::-moz-range-progress {
      height: 0.3rem;
      background-color: @range-filled-track-color;
    }

    &::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 1.6rem;
      height: 1.6rem;
      background: @default-background;
      border: 2px solid @range-filled-track-color;
      border-radius: 100px;
      margin-top: -6px;
    }

    &::-webkit-slider-runnable-track {
      height: 3px;
      background: @range-track-color;
      border: none;
      border-radius: 3px;
    }

    &:hover,
    &:focus {
      background: transparent;
      outline: none;

      &::-moz-range-progress {
        background-color: @primary;
      }
      &::-moz-range-thumb {
        border: 2px solid @primary;
      }

      &::-webkit-slider-runnable-track {
        background-color: @primary;
      }

      &::-webkit-slider-thumb {
        border: 2px solid @primary;
      }
    }

    &:disabled {
      &:hover,
      &:focus {
        background: transparent;
        outline: none;

        &::-moz-range-progress {
          background-color: @range-filled-track-color;
        }
        &::-moz-range-thumb {
          border: 2px solid @range-filled-track-color;
        }

        &::-webkit-slider-runnable-track {
          background-color: @range-filled-track-color;
        }

        &::-webkit-slider-thumb {
          border: 2px solid @range-filled-track-color;
        }
      }
    }
  }

  &.underline {
    padding: 0;
    border-left: 0;
    border-right: 0;
    border-top: 0;
    border-radius: 0;
    background-color: transparent;

    &:focus {
      box-shadow: none;
    }
    &:hover,
    &:focus {
      border-color: @primary;
      box-shadow: inset 0 -1px 0 @primary;
    }

    &:disabled,
    &:invalid {
      &:hover,
      &:focus {
        box-shadow: none;
        border-left: 0;
        border-right: 0;
        border-top: 0;
      }
    }

    &:invalid,
    &[invalid]:not([invalid='false']) {
      &:hover,
      &:focus {
        border-color: @danger;
        box-shadow: inset 0 -1px 0 @danger;
      }
    }

    &:disabled {
      &:hover,
      &:focus {
        border-color: @disabled-button-background;
      }
    }
  }
}

.custom-input {
  .checkmark {
    border-color: @input-border-color;
    background-color: transparent;
  }

  input:checked ~ .checkmark {
    background-color: @primary;
    border-color: @primary;
  }
  input[disabled=''] ~ .checkmark,
  input[disabled='true'] ~ .checkmark {
    background-color: @disabled-button-background;
    border-color: @disabled-button-color;

    &::after {
      border-color: @disabled-button-background;
    }
  }

  &:hover
    > input:not(:checked):not([disabled='']):not([disabled='true'])
    ~ .checkmark:after {
    border-color: @input-border-color;
  }

  &:hover > input:checked ~ .checkmark {
    background-color: @primary-hover;
    border-color: @primary-hover;
  }

  input[type='radio']:checked ~ .checkmark {
    background-color: @default-background;
    border-color: @primary;
  }

  input[type='radio']:focus ~ .checkmark {
    outline-color: @input-border-color;
  }

  .checkmark:after {
    border-color: @color-on-primary;
  }
}
